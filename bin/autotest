#!/usr/bin/env ruby

class AutoTest
  WATCHED_PATHS = %w[app test config lib].freeze
  WATCHED_EXTENSIONS = %w[rb erb].freeze
  POLL_INTERVAL_SECONDS = 0.5

  def initialize
    @running = false
    @file_times = {}
  end

  def start
    trap('INT') do
      exit
    end

    loop do
      run_tests if a_file_changed?
      sleep POLL_INTERVAL_SECONDS
    end
  end

  private
    def a_file_changed?
      a_file_changed = false
      pattern = "**/*.{#{WATCHED_EXTENSIONS.join(',')}}"

      WATCHED_PATHS.each do |path|
        next unless Dir.exist?(path)

        Dir.glob(File.join(path, pattern)).each do |file|
          mtime = File.mtime(file)
          next if @file_times.dig(file) == mtime

          @file_times[file] = mtime
          a_file_changed = true
        end
      end

      a_file_changed
    end

    def run_tests
      return if @running
      @running = true
      system("clear")
      system("bin/rails test --fail-fast")
      @running = false
    end
end

AutoTest.new.start
