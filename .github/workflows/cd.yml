name: CD

on:
  workflow_dispatch:
  # workflow_run:
  #   workflows: ["CI"]
  #   types: [completed]

jobs:
  deploy:
    # if: >
    #   github.event.workflow_run.conclusion == 'success' &&
    #   github.event.workflow_run.head_branch == 'main'

    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      BUNDLE_WITHOUT: "development test"
      DOCKER_BUILDKIT: 1
      RAILS_ENV: production
      ECR_FULL_REPO: 281752919491.dkr.ecr.us-east-1.amazonaws.com/blendergrid/web-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      # - name: Set up Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: .ruby-version
      #     bundler-cache: true

      # TODO: Set up a dedicated Github Actions user on AWS that can only access ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Get ECR Login Password
      #   run: |
      #     echo "KAMAL_REGISTRY_PASSWORD=$(aws ecr get-login-password)" >> $GITHUB_ENV

      # - name: Docker meta
      #   id: dockermeta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.ECR_FULL_REPO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Tag
        id: tag
        run: |
          echo "tag=$(git rev-parse "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          labels: |
            "service=blendergrid-web-app"
          tags: |
            "281752919491.dkr.ecr.us-east-1.amazonaws.com/blendergrid/web-app:latest"
            "281752919491.dkr.ecr.us-east-1.amazonaws.com/blendergrid/web-app:${{ steps.tag.outputs.tag }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max 

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Deploy using Kamal
      #   run: bin/kamal deploy
      #   env:
      #     RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      #     KAMAL_REGISTRY_PASSWORD: ${{ env.KAMAL_REGISTRY_PASSWORD }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Deploy using Kamal
        run: bin/kamal deploy --skip-push 
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          KAMAL_REGISTRY_PASSWORD: ${{ env.KAMAL_REGISTRY_PASSWORD }}

concurrency:
  group: deploy-prod
  cancel-in-progress: true
