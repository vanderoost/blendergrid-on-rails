name: CD

run-name: >-
  Deploy ${{ github.event.workflow_run.display_title
    || github.event.workflow_run.head_commit.message }}

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  deploy:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'

    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      BUNDLE_WITHOUT: "development test"
      DOCKER_BUILDKIT: 1
      RAILS_ENV: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      # TODO: Set up a dedicated Github Actions user on AWS that can only access ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Tag
        id: tag
        run: |
          echo "tag=$(git rev-parse "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          labels: |
            "service=blendergrid_on_rails"
          tags: |
            "281752919491.dkr.ecr.us-east-1.amazonaws.com/blendergrid/web-app:latest"
            "281752919491.dkr.ecr.us-east-1.amazonaws.com/blendergrid/web-app:${{ steps.tag.outputs.tag }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max 

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Deploy using Kamal
        run: bin/kamal deploy --skip-push 
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          KAMAL_REGISTRY_PASSWORD: ${{ steps.login-ecr.outputs.docker_password_281752919491_dkr_ecr_us_east_1_amazonaws_com }}

concurrency:
  group: deploy-prod
  cancel-in-progress: true
